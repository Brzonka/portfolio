// ----------------
//     MIXINS
// ----------------

//size
@mixin size($width, $height: $width) {
      width: $width;
      height: $height;
}

//position
@mixin position($position, $args) {
  @each $o in top right bottom left {
        $i: index($args, $o);

    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number  {
          #{$o}: nth($args, $i + 1);
    }
  }

  position: $position;
}

@mixin absolute($args) {
        @include position(absolute, $args);
}

@mixin fixed($args) {
        @include position(fixed, $args);
}

@mixin relative($args) {
        @include position(relative, $args);
}
//font size
@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == 'null' {
      font-size: $fs-font-size;
    }
    @else {
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        font-size: $fs-font-size;
      }
    }
  }
}

@mixin header-of-section{
    box-sizing: border-box;
    padding: 80px 15px;
    text-align: center;
    &__header{
        color: $base-color;
        animation: 0.8s start-slide-up2 backwards paused;
        @include font-size($h2-font-sizes);
        font-weight: 700;
        line-height: 150%;
        letter-spacing: 3px;
        text-transform: uppercase;
    }
    &__header-bottom{
        animation: 0.8s start-slide-up2 0.3s backwards paused;
        color: $text-color-dark;
        @include font-size($h4-font-sizes);
        letter-spacing: 7px;
        text-transform: uppercase;
        &::after{
            animation: 0.5s start-slide-up2 0.6s backwards;
            background: $text-color-darklight;
            content: "";
            display:block;
            height: 2px;
            margin: 25px auto;
            width: 50px;
        }
    }
}